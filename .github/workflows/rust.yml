name: Rust CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
        - x86_64-unknown-linux-gnu
        - x86_64-pc-windows-gnu
        - i686-unknown-linux-gnu
        - i686-w64-mingw32-gcc
        - aarch64-unknown-linux-gnu
        - armv7-unknown-linux-gnueabihf # Support for Raspberry Pi 2 / 3 / 4
        - arm-unknown-linux-gnueabihf   # Support for Raspberry Pi 1 / Zero
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target=${{ matrix.target }}

  check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
        command: check

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Run cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test

  lints:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
