name: Rust CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: build (${{ matrix.common }})
    strategy:
      matrix:
        name:
        - linux-x86_64
        - linux-x86
        - linux-aarch64
        - linux-armv7
        - linux-arm
        - windows-x86_64
        - windows-x86

        include:
        - name: linux-x86_64
          common: Linux x86 (64-Bit)
          target: x86_64-unknown-linux-gnu
          output: storagereloaded
        - name: linux-x86
          common: Linux x86 (32-Bit)
          target: i686-unknown-linux-gnu
          output: storagereloaded
        - name: linux-aarch64
          common: Linux ARM64
          target: aarch64-unknown-linux-gnu
          output: storagereloaded
        - name: linux-armv7
          common: Linux ARMv7
          target: armv7-unknown-linux-gnueabihf
          output: storagereloaded
        - name: linux-arm
          common: Linux ARM
          target: arm-unknown-linux-gnueabihf
          output: storagereloaded
        - name: windows-x86_64
          common: Windows x86 (64-Bit)
          target: x86_64-pc-windows-gnu
          output: storagereloaded.exe
        - name: windows-x86
          common: Windows x86 (32-Bit)
          target: i686-pc-windows-gnu
          output: storagereloaded.exe
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    - name: Build with Cargo
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target=${{ matrix.target }}
    - name: Upload Binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.common }} Binary
        path: target/${{ matrix.target }}/release/${{ matrix.output }}

  check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
        command: check

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Run cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test

  lints:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Install typos
      run: |
        # Download binary
        wget https://github.com/crate-ci/typos/releases/download/v1.0.3/typos-v1.0.3-x86_64-unknown-linux-gnu.tar.gz
        # Verify checksum
        echo "b7a59815d70429a58ff3fc8fc2f6e5d48cad4566cf089ab0d929d6697fd2e95b  typos-v1.0.3-x86_64-unknown-linux-gnu.tar.gz" | sha256sum --check
        # Extract and clean up
        tar xf typos-v1.0.3-x86_64-unknown-linux-gnu.tar.gz && rm typos-v1.0.3-x86_64-unknown-linux-gnu.tar.gz
    - name: Run cargo clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
    - name: Run typos
      run: ./typos
